close all;clear variables;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Definition des constantes %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%couleurs = [1,2,3,4,5];Flag_exception_cc = 0; %Flag permettant de détecter la présence d'un carre_creuxFlag_exception_pb_photo = 0; % Flag permettant de détecter un problème lie a la photo%%%%%%%%%%%%%%%%%%%%%%%%%%% Definition des données %%%%%%%%%%%%%%%%%%%%%%%%%%%%Importation de l'image en couleursIm_color = im2double(imread("formes/carre_creux_violet.png"));%Conversion en image noir-blancIm_nb = rgb2gray(Im_color);%Determination des dimensions de l'image[h,w] = size(Im_nb);%Determination des seuilsmaxi_im = max(max(Im_nb));mini_im = min(min(Im_nb));Seuil_up = (maxi_im + mini_im) *3/ 4;Seuil_down = (maxi_im + mini_im)* 1/ 4;%%%%%%%%%%%%%% Seuillage %%%%%%%%%%%%%%%Seuillage fortIm_fort = im2bw(Im_nb,Seuil_up);%Seuillage faibleIm_faible = im2bw(Im_nb,Seuil_down);%Seuillage à trois niveauxIm_3lvl = (Im_fort+Im_faible)/2;%Dilatation de l'image pour avoir des modifications franches en bordurest_pbbord = strel('square', 20);Im_dil3lvl = imdilate(Im_3lvl, st_pbbord);%%%%%%%%%%%%%%%%%%%%%%%%%%% Extraction de la forme %%%%%%%%%%%%%%%%%%%%%%%%%%%Marqueur = zeros(h,w);    %Initialisation de la reconstruction de la formeMemo = Marqueur;          %Mémoire de la reconstructionvaleur_milieue = Im_dil3lvl(floor(h/2),floor(w/2))+0.1;Marqueur(floor(h/2), floor(w/2)) = 1;  %Initialisation de la reconstructionst_geod = strel('square', 20);  %Element structurant pour la reconstruction geodesiquewhile(norm(Marqueur - Memo) ~= 0)  %Memorisation de l'ancien marqueur  Memo = Marqueur;  %Dilatation du marqueur  Marqueur = imdilate(Marqueur, st_geod);  %Comparaison avec l'image réelle  Marqueur = (valeur_milieue*Marqueur) == Im_dil3lvl+0.1;end%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Récupération des points limites %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%sommev = sum(Marqueur);sommeh = sum(Marqueur');xg = find(sommev,1,'first');xd = find(sommev, 1, 'last');yh = find(sommeh, 1, 'first');yb = find(sommeh, 1, 'last');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Extraction de l'imagette centrale contenant la forme et la couleur %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%Test si on a capté la couleur ou la formeif (valeur_milieue-0.1 == 0) %On est dans la forme    %Pour pouvoir capter la couleur, on se donne une marge  marge_forme = 60;  %Extraction de l'imagette en couleur  imagette_col = Im_color(yh-marge_forme:yb+marge_forme,xg-marge_forme:xd+marge_forme,:);  %Extraction du marqueur  marq_extr = Marqueur(yh-marge_forme:yb+marge_forme,xg-marge_forme:xd+marge_forme);    [h1,w1] = size(imagette_col(:,:,1));  elseif (valeur_milieue - 0.1 == 0.5) %On est dans la couleur    if (Im_dil3lvl(yh-1,floor(w/2)) == 0) %On est dans le creux du carre creux        Flag_exception_cc = 1;      elseif (Im_dil3lvl(yh-1,floor(w/2)) == 1) %On est dans la couleur exterieure à la forme        %Pour ne pas prendre de contour, on erode un peu l'image    marge_couleur = 30;    %Extraction de l'imagette en couleur    imagette_col = Im_color(yh+marge_couleur:yb-marge_couleur,xg+marge_couleur:xd-marge_couleur,:);    %Extraction du marqueur    marq_extr = Marqueur(yh+marge_couleur:yb-marge_couleur,xg+marge_couleur:xd-marge_couleur);    [h1,w1] = size(imagette_col(:,:,1));  endif  else     Flag_exception_pb_photo = 1;  endif%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Détermination de la couleur %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%Test si on a capté la couleur ou la formeif (valeur_milieue-0.1 == 0) %On est dans la forme    %Dilatation du marqueur  st_couleur = strel('square', 40);  marq_extr = imdilate(marq_extr,st_couleur);  %Isolation de la couleur  imagette_coul = imagette_col.*(1-marq_extr);  %Division des canaux  i_r = imagette_coul(:,:,1);  i_v = imagette_coul(:,:,2);  i_b = imagette_coul(:,:,3);    meilleur = 0;  score = 1000;  %Comparaison avec toutes les couleurs connues  for k = 1:length(couleurs)    nom_coul = couleurs(k);    %importation de la couleur    im_coul = im2double(imread(['Couleurs/',num2str(nom_coul),'.png']));    [h2,w2] = size(im_coul);    %Isolation des couleurs moyennes    Sr = 0;    Sv = 0;    Sb = 0;    for i=0:h2*w2/3-1      Sr += im_coul(3*i+1);      Sv += im_coul(3*i+2);      Sb += im_coul(3*i+3);    end        Sr = Sr / (h2*w2/3);    Sv = Sv / (h2*w2/3);    Sb = Sb / (h2*w2/3);        Ref = zeros(h1,w1,3);    Ref(:,:,1) = (1-marq_extr)*Sr;    Ref(:,:,2) = (1-marq_extr)*Sv;    Ref(:,:,3) = (1-marq_extr)*Sb;        im_comp = imagette_coul - Ref;        comp = sum(sum(sum(abs(im_comp))))/(255*h1*w1)    if (comp < score)      meilleur = k;      score = comp;      endif  end   elseif (valeur_milieue - 0.1 == 0.5) %On est dans la couleur    aretirer = ones(h1,w1);  aretirer(40:h1-40, 40:w1-40) = zeros(h1-79, w1-79);    imagette_coul = imagette_col .* aretirer;  %Division des canaux  i_r = imagette_coul(:,:,1);  i_v = imagette_coul(:,:,2);  i_b = imagette_coul(:,:,3);  meilleur = 0;  score = 1000;  %Comparaison avec toutes les couleurs connues  for k = 1:length(couleurs)    nom_coul = couleurs(k);    %importation de la couleur    im_coul = im2double(imread(['Couleurs/',num2str(nom_coul),'.png']));    [h2,w2] = size(im_coul);    %Isolation des couleurs moyennes    Sr = 0;    Sv = 0;    Sb = 0;    for i=0:h2*w2/3-1      Sr += im_coul(3*i+1);      Sv += im_coul(3*i+2);      Sb += im_coul(3*i+3);    end        Sr = Sr / (h2*w2/3);    Sv = Sv / (h2*w2/3);    Sb = Sb / (h2*w2/3);        Ref = zeros(h1,w1,3);    Ref(:,:,1) = (1-marq_extr)*Sr;    Ref(:,:,2) = (1-marq_extr)*Sv;    Ref(:,:,3) = (1-marq_extr)*Sb;        im_comp = imagette_coul - Ref;        comp = sum(sum(sum(abs(im_comp))))/(255*h1*w1)    if (comp < score)      meilleur = k;      score = comp;      endif  end   else     Flag_exception_pb_photo = 1;  endif%%%%%%%%%%%%%%%%%%%%%%%%%% Detection de la forme %%%%%%%%%%%%%%%%%%%%%%%%%%%Seuillage de l'imagetteimagette_seuil = im2double(im2bw(rgb2gray(imagette_col), Seuil_down));[hi,wi] = size(imagette_seuil);%Détermination du gradient[Gx,Gy] = gradient(imagette_seuil);%Détermination de la norme du gradientNG = Gx.^2 + Gy.^2;%Détection de droites[H,theta,Rho] = hough(NG,'Thetaresolution', 5);%SeuillageH_seuil = (H > max(max(H))/2).*H;Maximas_H = imregionalmax(H_seuil);%Le nombre de maximas permet de déterminer les formes (ou un traitement plus approfondi)Indices_maxi = find(Maximas_H);L_indices = length(Indices_maxi);if (L_indices == 4) %Carre  %Resultat OKelseif (L_indices == 3) %Triangle  %Resultat OKelseif (L_indices == 8) %Croix ou carre_creux    if imagetteseuil(floor(hi/2),floor(wi/2)) == 1  %Carre_creux    %Resultat OK  else    %Croix    %Resultat OK    endif  %Traitement supplementaireelse %Rond ou Coeur  [C,R] = imfindcircles(im2bw(NG,0.01),[length(NG)/15,length(NG)/3],'SENSITIVITY',0.9);  nombre = length(R);    if nombre == 1    %Rond    %Resultat OK  else    %Coeur    %Resultat OK    endifendif%%%%%%%%%%%%%%%%%%%%%%%%%%%% Affichage des resultats %%%%%%%%%%%%%%%%%%%%%%%%%%%%%Visualisation de l'image coloreefigure(1)subplot(121)imshow(Im_color)title('Image initiale')%Visualisation de l'image et noir et blancsubplot(122)imshow(Im_nb)title('Image en nuances de gris')%Visualisation des résultats du seuillagefigure(2)subplot(221)imshow(Im_fort)title('Seuillage fort')subplot(222)imshow(Im_faible)title('Seuillage faible')subplot(223)imshow(Im_3lvl)title('Seuillage a trois niveaux')subplot(224)imshow(Im_dil3lvl)title('Dilatation du seuillage a 3 niveaux')%Visualisation du marqueurfigure(3)imshow(Marqueur);title('Marqueur de l''image')%Visualisation de l'imagette extraitefigure(4)imshow(imagette_col)title('Imagette extraite')%Visualisation de la détection de la couleurfigure(5)subplot(221)imshow(marq_extr);title('Marqueur extrait du marqueur global')subplot(222)imshow(imagette_coul)title('imagette de la couleur a determiner')r_fig = zeros(h1,w1,3);r_fig(:,:,1) = i_r;v_fig = zeros(h1,w1,3);v_fig(:,:,2) = i_v;b_fig = zeros(h1,w1,3);b_fig(:,:,3) = i_b;subplot(234)imshow(r_fig)title('Canal rouge')subplot(235)imshow(v_fig)title('Canal vert')subplot(236)imshow(b_fig)title('Canal bleu')if (meilleur == 1)   printf('violet')elseif (meilleur == 2)  printf('jaune')elseif (meilleur == 3)  printf('orange')elseif (meilleur == 4)  printf('magenta')elseif (meilleur == 5)  printf('vert')endif  figure(6)subplot(221)imshow(imagette_seuil)title('Imagette seuillee pour determination de la forme')subplot(222)imshow(NG,[]);title('Norme du gradient de l''image');subplot(223)imshow(Gx,[]);title('GRadient suivant x de l''image');subplot(224)title('Gradient suivant y de l''image');imshow(Gy,[]);figure(7)subplot(221);imshow(Maximas_H,[]);title('Matrice d''accumlation detection de droites')